name: Meme on issue 

on:
  issues:
     types: [opened,closed]
 
  workflow_dispatch:
  
jobs:
  post_meme:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
       
      - name: Get Meme URL
        id: meme
        run: |
          IMAGE_PATH=".\SubTask3\meme1.jpg"
          IMAGE_URL="https://raw.githubusercontent.com/${{ github.repository }}/main/$IMAGE_PATH"
          echo "::set-output name=url::$IMAGE_URL"
          
      - name: Post Image Comment
        id: comment
        run: |
          ISSUE_NUMBER=$(jq --raw-output .issue.number "$GITHUB_EVENT_PATH")
          IMAGE_URL="${{ steps.meme.outputs.url }}"
          COMMENT_BODY="Here's the meme image: ![Image]('"$IMAGE_URL"')"
          echo "::set-output name=comment_body::$COMMENT_BODY"

      - name: Create Comment
        uses: actions/github-script@v4
        with:
         github-token: ${{ secrets.GITHUB_TOKEN }}
         script: |
           const issueNumber = context.issue.number;
           const commentBody = `${{ steps.comment.outputs.comment_body }}`;
           const octokit = require('@octokit/rest')();
           octokit.issues.createComment({
           owner: context.repo.owner,
           repo: context.repo.repo,
           issue_number: issueNumber,
           body: commentBody
           });
